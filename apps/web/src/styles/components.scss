
$slds: (
	"figma": (
		light: -1em 0
	),
	"github": (
		light: -2em 0,
		night: true
	),
	"gravatar": (
		light: -3em 0
	),
	"linkedin": (
		light: -4em 0
	),
	"x": (
		light: -5em 0
	),
	"dev": (
		light: -6em 0
	),
	"cloudflare": (
		light: -7em 0
	),
	"astro": (
		light: -8em 0,
		night: true
	),
	"cvut": (
		light: -9em 0
	),
	"avocode": (
		light: -10em 0
	),
	"producthunt": (
		light: -11em 0
	)
);

@layer components {
	[data-icon] {
		display: block;

		& svg {
			width: 3rem;
			padding: 0.75rem;
			stroke-width: 2.5;
		}

		@media (pointer: fine) {
			&:hover {
				color: theme("colors.brand.500");
			}

			&:active {
				color: theme("colors.brand.600");
			}
		}
	}

	[data-btn] {
		border: 3px solid transparent;
		display: inline-flex;
		justify-content: center;
		align-items: center;
		font: 700 1.25rem/1 Body, sans-serif;
		padding: 1.6875rem 2rem;
		width: 100%;
		text-transform: uppercase;
		cursor: pointer;
		gap: theme("gap.md");
		transition: background-color 0.1s ease-in-out, color 0.1s ease-in-out, border-color 0.1s ease-in-out;

		&:disabled {
			cursor: not-allowed;
			opacity: 0.5;
		}

		& svg {
			height: 1em;
			width: 1em;
			stroke-width: 3;
		}

		&[data-size="square"] {
			padding: 1.6875rem;
			width: auto;
		}

		@media (pointer: fine) {
			&:hover {
				user-select: none;
			}
		}
	}

	[data-btn="primary"] {
		background: var(--button-bg-primary-idle);
		color: var(--button-fg-primary-idle);

		&::before {
			border-color: var(--button-bg-primary-idle);
		}

		&:not(:disabled) {
			@media (pointer: fine) {
				&:hover {
					background: theme("colors.brand.500");

					&::before {
						border-color: theme("colors.brand.500");
					}
				}

				&:active {
					background: theme("colors.brand.600");

					&::before {
						border-color: theme("colors.brand.600");
					}
				}
			}
		}
	}

	[data-btn="secondary"] {
		border-color: theme("borderColor.primary");

		&:focus-visible {
			background: theme("textColor.primary");
			color: theme("backgroundColor.primary");

			&::before {
				border-color: theme("textColor.primary");
			}
		}

		&:not(:disabled) {
			@media (pointer: fine) {
				&:hover {
					background: theme("textColor.primary");
					color: theme("backgroundColor.primary");
				}

				&:active {
					background: theme("colors.brand.600");
					border-color: theme("colors.brand.600");
					color: theme("backgroundColor.primary");

					&::before {
						border-color: theme("colors.brand.600");
					}
				}
			}
		}
	}

	[data-link] {
		text-wrap: balance;
		font-weight: 500;
		text-decoration: underline;
		text-decoration-thickness: 3px;

		& svg {
			display: inline;
			vertical-align: -0.1875rem;
			margin-left: theme("margin.sm");
			width: 1em;
			height: 1em;
			stroke-width: 2.5;
		}

		&[href^="http"] {
			& svg {
				background-image: url('/images/favicons.png');
				background-size: auto 2em;
				background-repeat: no-repeat;

				@apply night:spritesheet-night;

				& * {
					visibility: hidden;
				}
			}
			
			&:hover, &:focus-visible {
				& svg {
					background-image: none;

					& * {
						visibility: visible;
					}
				}
			}

			@each $sld, $positions in $slds {
				&[data-sld$="#{$sld}"] svg {
					background-position-y: 0 !important;
					background-position: map.get($positions, light);
		
					@if map-has-key($positions, night) {
						@apply night:spritesheet-night #{!important};
					}
				}
			}
		}
	}

	[data-link="text"] {
		font-weight: 700;

		/* stylelint-disable-next-line no-descending-specificity */
		& svg {
			stroke-width: 3;
		}

		&:focus-visible {
			white-space: nowrap;
		}

		@apply text-brand-800/100 night:text-brand-500/100;
		@apply decoration-brand-800/25 night:decoration-brand-500/25;
		@apply hover:decoration-current hover:night:decoration-current;
		@apply active:text-brand-600/100 active:night:text-brand-600/100;
	}

	[data-link="primary"] {
		text-decoration-color: rgb(var(--fg-primary) / 25%);

		&:hover,
		&:focus-visible {
			text-decoration-color: rgb(var(--fg-primary) / 100%);
		}

		&:active {
			text-decoration-color: theme("colors.brand.600");
			color: theme("colors.brand.600");
		}
	}

	[data-link="secondary"] {
		color: rgb(var(--fg-secondary) / 100%);
		text-decoration-color: rgb(var(--fg-secondary) / 25%);

		@media (pointer: fine) {
			&:hover,
			&:focus-visible {
				text-decoration-color: rgb(var(--fg-secondary) / 100%);
			}

			&:active {
				text-decoration-color: theme("colors.brand.600");
				color: theme("colors.brand.600");

				&::before {
					border-color: theme("colors.brand.600");
				}
			}
		}
	}

	[data-input] {
		border: 3px solid theme("borderColor.secondary");
		border-radius: 0;
		background: none;
		width: 100%;
		padding: 2rem;

		&:disabled {
			cursor: not-allowed;
			opacity: 0.5;
		}

		&:focus-visible {
			border-color: theme("borderColor.primary");
		}

		&[data-invalid="true"] {
			border-color: theme("colors.error.600");
		}
	}

	[data-list] {
		list-style: disc;
		line-height: 1.5;
		font-weight: 500;
	}

	[data-list="text"] {
		padding-left: 1.5em;
		margin: 1em 0;

		&:last-child {
			margin-bottom: 0;
		}
	}

	[data-list="ol"] {
		list-style: none;

		@apply counter;
	}
}
