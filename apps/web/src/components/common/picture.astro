---
import { getImage } from "astro:assets";

import type { ImageMetadata } from "astro";
import type { HTMLAttributes } from "astro/types";

export interface Props extends HTMLAttributes<"img"> {
	image: ImageMetadata;
	alt?: string;
}

const { image, alt, loading = "lazy", decoding = "async", class: className, ...attrs } = Astro.props;

const webp = await getImage({
	src: image,
	format: "webp"
});

const avif = await getImage({
	src: image,
	format: "avif",
});

// NOTE: This is temporarily as during development image generation doesn't work because of MSW.
---

<picture class="overflow-hidden bg-secondary">
	{import.meta.env.PROD && (
		<source srcset={avif.src} type="image/avif" />
		<source srcset={webp.src} type="image/webp" />
	)}
	<img class:list={["motion-safe:animate-fade-in-and-zoom motion-reduce:animate-fade-in bg-secondary", className]} src={image.src} width={image.width} height={image.height} loading={loading} decoding={decoding} alt={alt || ""} {...attrs} />
</picture>

