---
import Icon from "./icon.astro";

import type { HTMLAttributes } from "astro/types";

export type Props = Pick<HTMLAttributes<"a">, "target" | "class"> & {
	href: string;
	/**
	 * @default "link"
	 */
	type?: "btn" | "link";
	/**
	 * @default "primary"
	 */
	kind?: "primary" | "secondary" | "text";
	/**
	 * Renders icon instead of text.
	 */
	icon?: string;
	/**
	 * @default true
	 */
	showIcon?: boolean;
};

const { href, kind = "primary", type = "link", icon, showIcon = true, ...attrs } = Astro.props;

const is_external = attrs.target === "_blank" || href.startsWith("http");

const attributes = Object.assign(attrs, {
	[`data-${icon ? "icon" : type}`]: kind,
});

const domains = is_external ? new URL(href).hostname.split(".") : null;
const second_level_domain = domains ? domains[domains.length - 2] : null
---

<a href={href} rel={is_external ? "noopener" : null} target={is_external ? "_blank" : null} data-sld={second_level_domain} {...attributes}>{icon ? (
	<span class="sr-only">
		<slot />
	</span>
	<Icon title="New tab" icon={icon} />
) : (
	<Fragment>
		<slot />{is_external && showIcon ? <Icon title="New tab" icon="square-arrow-out-up-right" /> : null}
	</Fragment>
)}</a>
