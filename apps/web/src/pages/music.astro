---
import HMFLayout from "~/layouts/hmf-layout.astro";

import Link from "~/components/common/link.astro";

import { SPOTIFY_AUTH_RESPONSE_SCHEMA, SPOTIFY_TOP_TRACKS_RESPONSE_SCHEMA } from "~/mocks/spotify";

const authResponse = await fetch("https://accounts.spotify.com/api/token", {
	method: "POST",
	headers: {
		Authorization: `Basic ${Buffer.from(`${import.meta.env.SPOTIFY_CLIENT_ID}:${import.meta.env.SPOTIFY_CLIENT_SECRET}`).toString("base64")}`,
		"Content-Type": "application/x-www-form-urlencoded"
	},
	body: new URLSearchParams({
		grant_type: "refresh_token",
		refresh_token: import.meta.env.SPOTIFY_REFRESH_TOKEN
	})
});

if (!authResponse.ok) {
	throw new Error(`Request finished with non 2xx code. Code: ${authResponse.status}.`);
}

const { access_token, token_type } = SPOTIFY_AUTH_RESPONSE_SCHEMA.parse(await authResponse.json());

const topResponse = await fetch("https://api.spotify.com/v1/me/top/tracks", {
	headers: {
		Authorization: `${token_type} ${access_token}`
	},
});

if (!topResponse.ok) {
	throw new Error(`Request finished with non 2xx code. Code: ${topResponse.status}.`);
}

const { items } = SPOTIFY_TOP_TRACKS_RESPONSE_SCHEMA.parse(await topResponse.json());

const generatedAt = new Date();
---

<HMFLayout
	noIndex
	title={{
		default: "Pavel Sušický - Spotify"
	}}
	classNames={{
		main: "max-w-content mx-auto px-lg lg:px-2xl pt-[6rem]"
	}}>
	<header class="mb-xl">
		<h1>Most listened</h1>
		<p>Generated on <time datetime={generatedAt.toISOString()}>{generatedAt.toLocaleDateString("en", { year: "numeric", month: "short", day: "numeric" })} at {generatedAt.toLocaleTimeString("en")}</time>.</p>
	</header>
	<ol class="flex flex-col gap-lg">
		{items.map(item => {
			const { name, artists } = item;

			return (
				<li>
					<article>
						<h2>{name}</h2>
						<address>
							<span class="sr-only">Produced by artists:</span>
							<ul class="flex gap-lg">
								{artists.map(artist => {
									return (
										<li>
											<Link kind="secondary" showIcon={false} href={artist.external_urls.spotify}>{artist.name}</Link>
										</li>
									);
								})}
							</ul>
						</address>
					</article>
				</li>
			);
		})}
	</ol>
</HMFLayout>
